<project name="MyProject" default="dist" basedir=".">
  <description>
    Jenkins tester
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="testsrc" location="src/test"/>
  <property name="build" location="bin"/>
  <property name="dist" location="dist"/>
  
<path id="test.classpath">
    <pathelement path="${build}/main"/>
    <pathelement path="${build}/test"/>
    <fileset dir="${ant.home}/lib" includes="*.jar" />
</path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/main"/>
    <mkdir dir="${build}/test"/>
    <mkdir dir="${build}/test/test-report"/>
    
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the Java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}/main" classpathref="test.classpath" >
        <exclude name="**/*Test*.java"/>
    </javac>
  </target>
  
  <target name="compile-test" depends="init, compile"
        description="compile the test source">
    <javac srcdir="${testsrc}" destdir="${build}/test" classpathref="test.classpath" includeantruntime="false" />
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}">
      <manifest>
        <attribute name="Main-Class" value="FibonacciUI"/>
      </manifest>
    </jar>
  </target>

   <target name="test" depends="compile-test">
    <junit printsummary="on" haltonfailure="yes" fork="true">
        <classpath>
          <path refid="test.classpath"/>
          <pathelement location="${build}/test"/>
        </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest>
            <fileset dir="${src}/test" includes="**/*Test*.java" />
        </batchtest>
    </junit>
   </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>